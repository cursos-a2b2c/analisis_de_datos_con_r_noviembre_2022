nestlings <- read.csv("~/trabajo/cursos/analisis_de_datos_con_r_octubre_2020/evaluacion/nestlings.csv")
View(nestlings)
nestlings$sample_weight
head(nestlings)
control <- nestlings$manipulation == "Control-injected"
tratamiento <- nestlings$manipulation == "IGF-1-injected"
tratamiento <- nestlings[nestlings$manipulation == "IGF-1-injected", ]
control <- nestlings[nestlings$manipulation == "Control-injected", ]
control
tratamiento
shapiro.test(control)
shapiro.test(control$sample_weight)
shapiro.test(tratamiento$sample_weight)
bartlett.test(list(control$sample_weight, tratamiento$sample_weight))
t.test(control$sample_weight, tratamiento$sample_weight, var.equal = T, paired = T)
#1)
#Cargamos los casos de covid por país
cases.covid.19.by.country <- read.csv("datasets/cases-covid-19-by-country.csv", stringsAsFactors=FALSE)
#Cantidad de datos
nrow(cases.covid.19.by.country)
#Primero le decimos a R en qué directorio queremos que trabaje
setwd("~/trabajo/cursos/analisis_de_datos_con_r_octubre_2020/clases/clase_3")
#1)
#Cargamos los casos de covid por país
cases.covid.19.by.country <- read.csv("datasets/cases-covid-19-by-country.csv", stringsAsFactors=FALSE)
#Cantidad de datos
nrow(cases.covid.19.by.country)
#Cantidad de atributos
ncol(cases.covid.19.by.country)
#Tipo de los atributos
str(cases.covid.19.by.country)
#Nombre de los atributos
colnames(cases.covid.19.by.country)
#Primeros 5 y últimos 5 datos
head(cases.covid.19.by.country, n = 5)
tail(cases.covid.19.by.country, n = 5)
#2)
#Medidas de centralidad, media, mediana y moda
mean(cases.covid.19.by.country$cum_conf)
#Cargamos antropometria
antropometria <- read.csv("datasets/antropometria.csv", stringsAsFactors=FALSE)
#b)
#Cantidad de datos
nrow(antropometria)
#Cantidad de atributos
ncol(antropometria)
#Tipo de los atributos
str(antropometria)
#Nombre de los atributos
colnames(antropometria)
#Primeros 5 y últimos 5 datos
head(antropometria, n = 5)
#c)
table(antropometria$sex)
View(antropometria)
#Vemos que hay algunos datos que están mal cargados, en lugar de F o M figuran números, podríamos sacarlos antes de seguir trabajando.
datos_invalidos <- antropometria$sex != "F" & antropometria$sex != "M"
datos_invalidos
#Vemos que hay algunos datos que están mal cargados, en lugar de F o M figuran números, podríamos sacarlos antes de seguir trabajando.
datos_validos <- antropometria$sex == "F" | antropometria$sex == "M" #(solo nos interesan los que digan F o M. o lógico se escribe con | en R)
antropometria <- antropometria[datos_validos, ] #Subseteamos los datos válidos
antropometria
table(antropometria$sex)
#Podemos usar summary o cada función por separado
summary(alturaHombres)
#d)
#Separamos las alturas en hombre y mujer
alturaHombres <- antropometria$height[antropometria$sex == "M"]
alturaMujeres <- antropometria$height[antropometria$sex == "F"]
#Podemos usar summary o cada función por separado
summary(alturaHombres)
mean(alturaHombres, na.rm = T) #na.rm remueve los NA
sd(alturaHombres, na.rm = T) #na.rm remueve los NA
var(alturaHombres, na.rm = T) #na.rm remueve los NA
nax(alturaHombres, na.rm = T) #na.rm remueve los NA
max(alturaHombres, na.rm = T) #na.rm remueve los NA
min(alturaHombres, na.rm = T) #na.rm remueve los NA
median(alturaHombres, na.rm = T) #na.rm remueve los NA
var(alturaHombres, na.rm = T) #na.rm remueve los NA
sd(alturaHombres, na.rm = T) #na.rm remueve los NA
#Hacemos lo mismo para las mujeres
summary(alturaMujeres) #Observamos que hay un dato NA, a cada función le vamos a tener que pedir que retire los NAs, si no van a contagiar.
max(alturaMujeres)
min(alturaMujeres)
mean(alturaMujeres)
median(alturaMujeres)
var(alturaMujeres)
sd(alturaMujeres)
mean(alturaMujeres)
mean(alturaHombres, na.rm = T) #na.rm remueve los NA
sd(alturaHombres, na.rm = T) #na.rm remueve los NA
sd(alturaMujeres)
var(alturaMujeres)
var(alturaHombres, na.rm = T) #na.rm remueve los NA
#e)
#Cargamos los casos de covid por país
cases.covid.19.by.country <- read.csv("datasets/cases-covid-19-by-country.csv", stringsAsFactors=FALSE)
#f, g, h, i)
#Cantidad de datos
nrow(cases.covid.19.by.country)
#Cantidad de atributos
ncol(cases.covid.19.by.country)
#Tipo de los atributos
str(cases.covid.19.by.country)
#Nombre de los atributos
colnames(cases.covid.19.by.country)
#Primeros 5 y últimos 5 datos
head(cases.covid.19.by.country, n = 5)
tail(cases.covid.19.by.country, n = 5)
#2)
#Medidas de centralidad, media, mediana y moda
mean(cases.covid.19.by.country$cum_conf)
#2)
#Medidas de centralidad, media, mediana y moda
mean(cases.covid.19.by.country$cum_conf)
#j)
#Medidas de centralidad, media, mediana y moda
mean(cases.covid.19.by.country$cum_conf)
median(cases.covid.19.by.country$cum_conf)
which.max(table(cases.covid.19.by.country$cum_conf))
mean(cases.covid.19.by.country$cum_death)
median(cases.covid.19.by.country$cum_death)
which.max(table(cases.covid.19.by.country$cum_death))
#Medidas de dispersión, rango, desvío estandar e IQR
max(cases.covid.19.by.country$cum_conf)-min(cases.covid.19.by.country$cum_conf)
sd(cases.covid.19.by.country$cum_conf)
IQR(cases.covid.19.by.country$cum_conf)
max(cases.covid.19.by.country$cum_death)-min(cases.covid.19.by.country$cum_death)
sd(cases.covid.19.by.country$cum_death)
IQR(cases.covid.19.by.country$cum_death)
#b)
plot(antropometria$age, antropometria$height, xlab = "Edad", ylab = "Altura")
#Grafiquemos por sexo
plot(antropometria$age[antropometria$sex == "F"], antropometria$height[antropometria$sex == "F"], xlab = "Edad", ylab = "Altura")
#Grafiquemos por sexo
plot(antropometria$age[antropometria$sex == "M"], antropometria$height[antropometria$sex == "M"], col = "red")
points(antropometria$age[antropometria$sex == "F"], antropometria$height[antropometria$sex == "F"], col = "green")
legend("bottomright", legend = c("Hombres", "Mujeres"))
legend("bottomright", legend = c("Hombres", "Mujeres"), col = c("red", "green"))
legend("bottomright", legend = c("Hombres", "Mujeres"), col = c("red", "green"), pch = 1)
#Grafiquemos por sexo
plot(antropometria$age[antropometria$sex == "M"], antropometria$height[antropometria$sex == "M"], col = "red", xlab = "Edad", ylab = "Altura")
points(antropometria$age[antropometria$sex == "F"], antropometria$height[antropometria$sex == "F"], col = "green")
legend("bottomright", legend = c("Hombres", "Mujeres"), col = c("red", "green"), pch = 1)
#b)
plot(antropometria$age, antropometria$height, xlab = "Edad (años)", ylab = "Altura (cm)")
#Grafiquemos por sexo
plot(antropometria$age[antropometria$sex == "M"], antropometria$height[antropometria$sex == "M"], col = "red", xlab = "Edad", ylab = "Altura")
#Grafiquemos por sexo
plot(antropometria$age[antropometria$sex == "M"], antropometria$height[antropometria$sex == "M"], col = "red", xlab = "Edad (años)", ylab = "Altura (cm)")
points(antropometria$age[antropometria$sex == "F"], antropometria$height[antropometria$sex == "F"], col = "green")
legend("bottomright", legend = c("Hombres", "Mujeres"), col = c("red", "green"), pch = 1)
#c)
#Esto lo hacemos a ojo, elegimos alrededor de los 20 años. El ejercicio no pretende calcular esto de forma automática
abline(v = 20, col = "blue", lty = 2)
#d) Subseteamos y nos quedamos con los mayores a 20 años
adultos <- antropometria[antropometria$age > 20, ]
#d) Subseteamos y nos quedamos con los mayores a 20 años
adultos <- antropometria[antropometria$age > 20, ]
#e)
#Podemos usar fórmulas para hacer esto más fácil
boxplot(height ~ sex, data = adultos)
legend("topleft", legend = c("Altura de hombres y mujeres")
)
boxplot(weight ~ sex, data = adultos)
legend("topleft", legend = c("Peso de mujeres y hombres"))
#f)
#Graficamos altura vs peso para mujeres y para hombres por separado.
plot(adultos[adultos$sex == "F", "weight"], adultos[adultos$sex == "F", "heigth"])
adultos[adultos$sex == "F", "weight"]
#f)
#Graficamos altura vs peso para mujeres y para hombres por separado.
plot(adultos$weight[adultos$sex == "F"], adultos[adultos$sex == "F", "heigth"])
#Eliminemos los NAs que hayan quedado para sacarnos ese problema de encima. Podemos usar un for, un apply o vectorizado, la función complete.cases que devuelve
#solamente las observaciones que no tienen NA
adultos <- adultos[complete.cases(adultos), ]
adultos
#e)
#Podemos usar fórmulas para hacer esto más fácil
boxplot(height ~ sex, data = adultos)
legend("topleft", legend = c("Altura de mujeres y hombres"))
boxplot(weight ~ sex, data = adultos)
legend("topleft", legend = c("Peso de mujeres y hombres"))
#f)
#Graficamos altura vs peso para mujeres y para hombres por separado.
plot(adultos$weight[adultos$sex == "F"], adultos[adultos$sex == "F", "heigth"])
adultos$weight[adultos$sex == "F"]
#f)
#Graficamos altura vs peso para mujeres y para hombres por separado.
plot(adultos$weight[adultos$sex == "F"], adultos$height[adultos$sex == "F"])
#f)
#Graficamos altura vs peso para mujeres y para hombres por separado.
plot(adultos$weight[adultos$sex == "F"], adultos$height[adultos$sex == "F"], xlab = "Peso (kg)", ylab = "Altura (cm)")
#f)
#Graficamos altura vs peso para mujeres y para hombres por separado.
plot(adultos$weight[adultos$sex == "F"], adultos$height[adultos$sex == "F"], xlab = "Peso (kg)", ylab = "Altura (cm)", main = "Peso y Altura para Mujeres")
#Calculamos la correlación usando cor
cor(adultos$weight[adultos$sex == "F"], adultos$height[adultos$sex == "F"])
#g)
hist(adultos$height[adultos$sex == "F"])
hist(adultos$height[adultos$sex == "M"], add = T)
#g)
hist(adultos$height[adultos$sex == "M"], add = T, col = "red")
hist(adultos$height[adultos$sex == "F"], col = "green")
#g)
hist(adultos$height[adultos$sex == "M"], add = T, col = "red")
#g)
hist(adultos$height[adultos$sex == "M"], col = "red")
hist(adultos$height[adultos$sex == "F"], col = "green", add = T)
#g)
hist(adultos$height[adultos$sex == "M"], col = "red", breaks = 20)
hist(adultos$height[adultos$sex == "F"], col = "green", add = T, breaks = 20)
legend("topleft", legend = c("Altura de mujeres y hombres"), col = c("green", "red"), fill = T)
legend("topleft", legend = c("Mujeres", "Hombres"), col = c("green", "red"), fill = T)
legend("topleft", legend = c("Mujeres", "Hombres"), col = c("green", "red"), fill = c("green", "red"))
#g)
hist(adultos$height[adultos$sex == "M"], col = "red", breaks = 20)
hist(adultos$height[adultos$sex == "F"], col = "green", add = T, breaks = 20)
legend("topleft", legend = c("Mujeres", "Hombres"), col = c("green", "red"), fill = c("green", "red"))
#g)
hist(adultos$height[adultos$sex == "M"], col = "red", breaks = 20, xlab = "Altura", main = "Histograma de altura")
hist(adultos$height[adultos$sex == "F"], col = "green", add = T, breaks = 20)
legend("topleft", legend = c("Mujeres", "Hombres"), col = c("green", "red"), fill = c("green", "red"))
#h)
cases.covid.19.by.country <- read.csv("datasets/cases-covid-19-by-country.csv", stringsAsFactors=FALSE)
#i)
#Hacemos histogramas. Por lo que vimos antes, quizás es conveniente separar los datos más extremos.
hist(cases.covid.19.by.country$cum_conf)
#Vamos a analizar los países con menos casos.
#Nos podemos quedar con los datos que estén por debajo del "bigote", tercer cuartil + 1.5*IQR
#Calculamos los valores que nos interesan
tercer_cuartil <- summary(cases.covid.19.by.country$cum_conf)[5]
iqr            <- IQR(cases.covid.19.by.country$cum_conf)
cases.covid.19.by.country$cum_conf
#i)
#Hacemos histogramas. Voy a usar el total de los casos confirmados, ustedes pueden usar otras que gusten.
hist(cases.covid.19.by.country$cum_conf)
#i)
#Hacemos histogramas. Voy a usar el total de los casos confirmados, ustedes pueden usar otras que gusten.
hist(cases.covid.19.by.country$cum_conf, main = "Histograma de casos confirmados", xlab = "Casos confirmados por pais")
#i)
#Hacemos histogramas. Voy a usar el total de los casos confirmados, ustedes pueden usar otras que gusten.
hist(cases.covid.19.by.country$cum_conf, main = "Histograma de casos confirmados COVID", xlab = "Casos confirmados")
#Vamos a analizar los países con menos casos.
#Nos podemos quedar con los datos que estén por debajo del "bigote", tercer cuartil + 1.5*IQR
#Calculamos los valores que nos interesan
tercer_cuartil <- summary(cases.covid.19.by.country$cum_conf)[5]
iqr            <- IQR(cases.covid.19.by.country$cum_conf)
#Hay mucha diferencia entre países, vamos a analizar los países con menos casos.
#Nos podemos quedar con los datos que estén por debajo del "bigote", tercer cuartil + 1.5*IQR
#Calculamos los valores que nos interesan
tercer_cuartil <- summary(cases.covid.19.by.country$cum_conf)[5]
iqr            <- IQR(cases.covid.19.by.country$cum_conf)
#Vemos cuales cumplen con la condición y nos quedamos solo con esos
ids_casos <- which(cases.covid.19.by.country$cum_conf < tercer_cuartil + 1.5*iqr)
cum_conf <- cases.covid.19.by.country$cum_conf[ids_casos]
summary(cum_conf)
hist(cum_conf, main = "Histograma de casos confirmados COVID", xlab = "Casos confirmados")
#j)
#Grafiquemos un histograma y un boxplot para com_conf
layout(matrix(1:2, ncol=1, nrow=2))
hist(cum_conf, main = "Casos confirmados COVID", xlab = "Casos confirmados")
boxplot(cum_conf, horizontal = T)
#k)
#Grafiquemos un scatterplot
layout(1) #Volvemos a un sólo gráfico por vez
plot(cases.covid.19.by.country$cum_conf, cases.covid.19.by.country$cum_death, xlab = "Casos", ylab = "Fallecimientos", main = "Casos de COVID-19 por país")
#Los casos extremos no nos permiten visualizar con detalle la relación. Debemos sacarlos.
tercer_cuartil_conf <- summary(cases.covid.19.by.country$cum_conf)[5]
iqr_conf            <- IQR(cases.covid.19.by.country$cum_conf)
tercer_cuartil_death <- summary(cases.covid.19.by.country$cum_death)[5]
iqr_death            <- IQR(cases.covid.19.by.country$cum_death)
#Vemos cuales cumplen con las dos condiciones y nos quedamos solo con esos
ids_casos <- which(cases.covid.19.by.country$cum_conf < tercer_cuartil_conf + 1.5*iqr_conf &
cases.covid.19.by.country$cum_death < tercer_cuartil_death + 1.5*iqr_death)
casos_de_interes <- cases.covid.19.by.country[ids_casos, ]
#Grafiquemos
plot(casos_de_interes$cum_conf, casos_de_interes$cum_death)
#Grafiquemos
plot(casos_de_interes$cum_conf, casos_de_interes$cum_death, xlab = "Casos", ylab = "Fallecimientos", main = "Casos de COVID-19 por país")
#Sigue siendo dificil de identificar que le pasa a la mayor parte de los casos, recortemos nuevamente
#hagamos un zoom a la parte más llena
ids_casos <- which(cases.covid.19.by.country$cum_conf < 500 &
cases.covid.19.by.country$cum_death < 10)
casos_de_interes <- cases.covid.19.by.country[ids_casos, ]
#Grafiquemos
plot(casos_de_interes$cum_conf, casos_de_interes$cum_death, main = "Casos confirmados vs. fallecimientos", xlab = "Casos confirmados", ylab="Fallecimientos")
118*89.83
118*89.83/100
123*84.55/100
118+123
#e)
#Armamos los datos. De una muestra de 241 personas, se tienen 118 pacientes tratados con el medicamente y 123 con el placebo, de los cuales se curaron 106 y 104 respectivamente.
estudiantes <- data.frame(sexo = rep(c("H", "M"), each = 12),
estudia = c(F, F, F, F, F, F, F, F, F, F, F, T, F, F, F, T, T, T, T, T, T, T, T, T))
head(estudiantes)
123-104
pacientes <- data.frame(tratado = c(rep(TRUE, 118), rep(FALSE, 123)), curado = c(rep(TRUE, 106), rep(FALSE, 12), rep(TRUE, 104), rep(FALSE, 19)))
head(pacientes)
#Armemos la tabla de contingencia
table(pacientes$tratado, pacientes$curado)
chisq.test(pacientes$tratado, pacientes$curado)
#Algunas personas interpretan el pvalue como una medida del efecto observado. ¿Será correcta esta interpretación? Veamos
#Simulemos un efecto, por ejemplo, el de una hormona de crecimiento aplicada a un hongo.
#Simulemos la población no tratada y la tratada.
no_tratada <- rnorm(10, mean = 10, sd = 0.1)
#Algunas personas interpretan el pvalue como una medida del efecto observado. ¿Será correcta esta interpretación? Veamos
#Simulemos un efecto, por ejemplo, el de una hormona de crecimiento aplicada a un hongo.
#Simulemos la población no tratada y la tratada.
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
t.test(no_tratada, tratada)
shapiro.test(no_tratada)
shapiro.test(tratada)
t.test(no_tratada, tratada)
#Aumentemos el tamaño de la muestra
no_tratada <- rnorm(100, mean = 10, sd = 1)
tratada    <- rnorm(100, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Aumentemos el tamaño de la muestra
no_tratada <- rnorm(20, mean = 10, sd = 1)
tratada    <- rnorm(20, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Aumentemos el tamaño de la muestra
no_tratada <- rnorm(15, mean = 10, sd = 1)
tratada    <- rnorm(15, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Algunas personas interpretan el pvalue como una medida del efecto observado. ¿Será correcta esta interpretación? Veamos
#Simulemos un efecto, por ejemplo, el de una hormona de crecimiento aplicada a un hongo.
#Simulemos la población no tratada y la tratada, y supongamos que hubo un efecto en la tratada
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Algunas personas interpretan el pvalue como una medida del efecto observado. ¿Será correcta esta interpretación? Veamos
#Simulemos un efecto, por ejemplo, el de una hormona de crecimiento aplicada a un hongo.
#Simulemos la población no tratada y la tratada, y supongamos que hubo un efecto en la tratada
set.seed(123457)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Algunas personas interpretan el pvalue como una medida del efecto observado. ¿Será correcta esta interpretación? Veamos
#Simulemos un efecto, por ejemplo, el de una hormona de crecimiento aplicada a un hongo.
#Simulemos la población no tratada y la tratada, y supongamos que hubo un efecto en la tratada
set.seed(1234567)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Algunas personas interpretan el pvalue como una medida del efecto observado. ¿Será correcta esta interpretación? Veamos
#Simulemos un efecto, por ejemplo, el de una hormona de crecimiento aplicada a un hongo.
#Simulemos la población no tratada y la tratada, y supongamos que hubo un efecto en la tratada
set.seed(123456)
no_tratada <- rnorm(10, mean = 10, sd = 1)
tratada    <- rnorm(10, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Aumentemos el tamaño de la muestra
set.seed(123456)
no_tratada <- rnorm(15, mean = 10, sd = 1)
tratada    <- rnorm(15, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Aumentemos aún más el tamaño de la muestra
set.seed(123456)
no_tratada <- rnorm(100, mean = 10, sd = 1)
tratada    <- rnorm(100, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#Entonces, ojo, un pvalue más chico no nos dice que tenemos un efecto más grande!
#Cambiando nuestro experimento podemos manipular el pvalue, manteniendo el mismo tamaño de efecto
#Veamos que pasa si el efecto fuera más chico
set.seed(123456)
no_tratada <- rnorm(100, mean = 10, sd = 1)
tratada    <- rnorm(100, mean = 10.1, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#¿Qué pasó?
#Mejoremos el experimento
set.seed(123456)
no_tratada <- rnorm(10000, mean = 10, sd = 1)
tratada    <- rnorm(10000, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
#¿Qué pasó?
#Mejoremos el experimento
set.seed(123456)
no_tratada <- rnorm(10000, mean = 10, sd = 1)
tratada    <- rnorm(10000, mean = 11, sd = 1)
shapiro.test(tratada)
#¿Qué pasó?
#Mejoremos el experimento
set.seed(123456)
no_tratada <- rnorm(1000, mean = 10, sd = 1)
tratada    <- rnorm(1000, mean = 11, sd = 1)
shapiro.test(tratada)
shapiro.test(no_tratada)
t.test(no_tratada, tratada)
#¿Y si no hubiera efecto?
set.seed(123456)
no_tratada <- rnorm(100, mean = 10, sd = 1)
tratada    <- rnorm(100, mean = 10, sd = 1)
#¿Y si no hubiera efecto?
set.seed(123456)
no_tratada <- rnorm(100000, mean = 10, sd = 1)
tratada    <- rnorm(100000, mean = 10, sd = 1)
t.test(no_tratada, tratada)
no_tratada <- rnorm(100000, mean = 10, sd = 1)
tratada    <- rnorm(100000, mean = 10, sd = 1)
t.test(no_tratada, tratada)
as.data.frame(t.test(no_tratada, tratada))
data.frame(t.test(no_tratada, tratada))
pvalue(t.test(no_tratada, tratada))
summary(t.test(no_tratada, tratada))
summary(t.test(no_tratada, tratada))$p.value
summary(t.test(no_tratada, tratada))["p.value"]
summary(t.test(no_tratada, tratada))[3, ]
t.test(no_tratada, tratada)
t.test(no_tratada, tratada)$p.value
#Bueno, por suerte no era un artefacto del experimento. Pero con una significancia de 0.05, qué pasa si repetimos el experimento 100 veces?
set.seed(123456)
pvalues <- c()
for(i in 1:100){
no_tratada <- rnorm(100000, mean = 10, sd = 1)
tratada    <- rnorm(100000, mean = 10, sd = 1)
pvalues <- c(pvalues, t.test(no_tratada, tratada)$p.value)
}
#Bueno, por suerte no era un artefacto del experimento. Pero con una significancia de 0.05, qué pasa si repetimos el experimento 100 veces?
set.seed(123456)
pvalues <- c()
for(i in 1:100){
no_tratada <- rnorm(1000, mean = 10, sd = 1)
tratada    <- rnorm(1000, mean = 10, sd = 1)
pvalues <- c(pvalues, t.test(no_tratada, tratada)$p.value)
}
pvalues
table(pvalues < 0.05)
#Bueno, por suerte no era un artefacto del experimento. Pero con una significancia de 0.05, qué pasa si repetimos el experimento 100 veces?
set.seed(123456)
pvalues <- c()
for(i in 1:20){
no_tratada <- rnorm(1000, mean = 10, sd = 1)
tratada    <- rnorm(1000, mean = 10, sd = 1)
pvalues <- c(pvalues, t.test(no_tratada, tratada)$p.value)
}
table(pvalues < 0.05)
t.test(no_tratada, tratada)
#Sigamos analizando la salida del test
set.seed(123456)
no_tratada <- rnorm(100, mean = 10, sd = 1)
tratada    <- rnorm(100, mean = 11, sd = 1)
t.test(no_tratada, tratada)
#Sigamos analizando la salida del test, volviendo a las alturas en Holanda
t.test(alturasHolanda, mu = 175)
